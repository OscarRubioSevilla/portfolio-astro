---
import Moon from "../icons/Moon.astro";
import Sun from "../icons/Sun.astro";
---

<nav
  class="bg-white dark:bg-gray-900 fixed w-full z-20 top-0 start-0 border-b border-gray-200 dark:border-gray-600"
>
  <div
    class="max-w-screen-xl flex flex-wrap items-center justify-between lg:justify-evenly mx-auto p-3"
  >
    <a href="#top" class="flex items-center space-x-3 rtl:space-x-reverse">
      <img
        class="size-10 rounded-full object-contain shadow border-solid border-[1px] border-white outline-2 outline-matisse dark:border-yellow-100 dark:outline-white"
        src="/avatar.jpeg"
        alt="rubosdev"
      />
    </a>
    <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
      <button
        aria-label="Toggle theme"
        id="theme-toggle"
        class="transition-colors cursor-pointer"
      >
        <Sun id="sun" class="size-6 text-yellow-100" />
        <Moon id="moon" class="size-6 hidden text-matisse" />
      </button>
      <button
        id="dropdownButton"
        type="button"
        class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="w-5 h-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 17 14"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 1h15M1 7h15M1 13h15"></path>
        </svg>
      </button>
    </div>
    <div
      class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1"
      id="navbar-sticky"
    >
      <ul
        class="flex flex-col mt-4 font-medium md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
      >
        <li>
          <a
            href="#"
            class="block py-2 px-3 text-gray-500 transition-all duration-300 md:hover:underline rounded-sm md:bg-transparent md:p-0 dark:text-white"
            >Home</a
          >
        </li>
        <li>
          <a
            href="#about"
            class="block py-2 px-3 text-gray-500 transition-all duration-300 md:hover:underline rounded-sm md:bg-transparent md:p-0 dark:text-white"
            >Sobre mi</a
          >
        </li>
        <li>
          <a
            href="#projects"
            class="block py-2 px-3 text-gray-500 transition-all duration-300 md:hover:underline rounded-sm md:bg-transparent md:p-0 dark:text-white"
            >Proyectos</a
          >
        </li>
        <li>
          <a
            href="#"
            class="block py-2 px-3 text-gray-500 transition-all duration-300 md:hover:underline rounded-sm md:bg-transparent md:p-0 dark:text-white"
            >Contact</a
          >
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  // Dropdown Menu
  const dropdownButton = document.getElementById("dropdownButton");
  const navbar = document.getElementById("navbar-sticky");

  const anchorLinks = navbar.querySelectorAll("a");

  const hashInUrl = window.location.hash;

  console.log(hashInUrl);

  if (hashInUrl) {
    const activeLink = navbar.querySelector(`a[href="${hashInUrl}"]`);

    console.log(activeLink);

    if (activeLink) activeLink.classList.add("active");
    else anchorLinks[0].classList.add("active");
  } else {
    anchorLinks[0].classList.add("active");
  }

  anchorLinks.forEach((link) => {
    link.addEventListener("click", () => {
      const activeLink = navbar.querySelector("a.active");
      if (activeLink) activeLink.classList.remove("active");

      link.classList.add("active");
      navbar.classList.add("hidden");
    });
  });

  dropdownButton.addEventListener("click", () => {
    navbar.classList.toggle("hidden");
  });

  // Theme Toggle
  const themeToggle = document.getElementById("theme-toggle");

  if (themeToggle) {
    const root = document.documentElement;
    const savedTheme = localStorage.getItem("theme") || "dark";

    const applyTheme = (isDark: boolean) => {
      root.classList.toggle("dark", isDark);

      const sun = document.getElementById("sun");
      const moon = document.getElementById("moon");

      sun?.classList.toggle("hidden", !isDark);
      moon?.classList.toggle("hidden", isDark);
    };

    applyTheme(savedTheme === "light");

    themeToggle.addEventListener("click", () => {
      const isDark = !root.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "light" : "dark");
      applyTheme(isDark);
    });
  }
</script>
